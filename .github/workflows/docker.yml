name: Container Image CI

on:
  push:
    branches-ignore: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-system:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extract Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          flavor: prefix=system_,onlatest=true

      - name: Build and Push Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: system/
          push: true
          tags: ${{steps.meta.outputs.tags}}

      # - name: Generate Artifact Attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
      #     subject-digest: ${{steps.push.outputs.digest}}
      #     push-to-registry: true

  build-load:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extract Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          flavor: prefix=load_,onlatest=true

      - name: Build and Push Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: load/
          push: true
          tags: ${{steps.meta.outputs.tags}}

      # - name: Generate Artifact Attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
      #     subject-digest: ${{steps.push.outputs.digest}}
      #     push-to-registry: true
